{"version":3,"sources":["authReducer.js","components/Utils.js","components/Login.js","components/NewPost.js","components/Loader.js","components/PostList.js","components/EditPost.js","components/Nav.js","components/Home.js","App.js","index.js"],"names":["authReducer","state","action","type","token","payload","localStorage","setItem","isAuthenticated","clear","Button","styled","button","variant","getColour","font","bg","Message","div","Login","dispatch","useContext","AuthContext","useState","messages","setMessages","email","password","values","setValues","handleChange","e","target","name","value","handleSubmit","a","preventDefault","config","headers","body","JSON","stringify","axios","post","res","data","errorArray","response","errors","map","err","text","msg","setTimeout","onSubmit","htmlFor","id","onChange","NewPost","tags","setTags","title","setData","Authorization","tagList","tag","newPost","reset","isMulti","openMenuOnClick","formatCreateLabel","Spinner","style","position","top","left","transform","zIndex","PostList","posts","setPosts","useEffect","get","postList","console","error","fetchPosts","deletePost","postID","newList","filter","_id","delete","i","textAlign","length","moment","date","format","onClick","to","EditPost","useParams","setPost","fetchPost","put","Nav","display","alignItems","listStyle","gap","Home","exact","path","component","createContext","App","useReducer","getItem","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3a840c7.chunk.js","sourcesContent":["const authReducer = (state, action) => {\n  switch (action.type) {\n    case \"login\":\n      const token = action.payload.token;\n      localStorage.setItem(\"token\", token);\n      return {\n        ...state,\n        isAuthenticated: true,\n        token: token,\n      };\n    case \"logout\":\n      localStorage.clear();\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  align-self: flex-start;\n  color: ${({ variant }) => getColour(variant).font};\n  border: none;\n  background-color: ${({ variant }) => getColour(variant).bg};\n  padding: 8px;\n  cursor: pointer;\n  font: inherit;\n`;\n\nexport const Message = styled.div`\n  background-color: ${({ variant }) => getColour(variant).bg};\n  border-radius: 20px;\n  padding: 6px;\n  margin: 4px;\n  color: ${({ variant }) => getColour(variant).font};\n  text-align: center;\n`;\n\nconst getColour = (variant) => {\n  switch (variant) {\n    case \"success\":\n      return { bg: \"#64be10\", font: \"#fff\" };\n    case \"danger\":\n      return { bg: \"#f33434\", font: \"#fff\" };\n    case \"warning\":\n      return { bg: \"#fdc52a\", font: \"#313131\" };\n    default:\n      return { bg: \"#2d9ee9\", font: \"#fff\" };\n  }\n};\n","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../App\";\nimport { Button, Message } from \"./Utils\";\n\nconst Login = () => {\n  const { dispatch } = useContext(AuthContext);\n  const [messages, setMessages] = useState([]);\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      const body = JSON.stringify(values);\n\n      const res = await axios.post(\"/api/auth\", body, config);\n\n      dispatch({\n        type: \"login\",\n        payload: res.data,\n      });\n    } catch (err) {\n      const errorArray = err.response.data.errors.map((err) => {\n        return { text: err.msg, type: \"danger\" };\n      });\n      setMessages(errorArray);\n      setTimeout(() => setMessages([]), 5000);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Login</h1>\n      {messages &&\n        messages.map((msg) => <Message variant={msg.type}>{msg.text}</Message>)}\n      <form\n        onSubmit={(e) => {\n          handleSubmit(e);\n        }}\n      >\n        <label htmlFor=\"email\">\n          Email:\n          <input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password:\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChange}\n          />\n        </label>\n        <Button>Login</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../App\";\nimport { Message, Button } from \"./Utils\";\nimport CreatableSelect from \"react-select/creatable\";\n\nconst NewPost = () => {\n  const [messages, setMessages] = useState([]);\n  const { state } = useContext(AuthContext);\n  const [tags, setTags] = useState([]);\n  const [data, setData] = useState({\n    title: \"\",\n    text: \"\",\n  });\n\n  const handleChange = (e) => {\n    setData({\n      ...data,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleTags = (values) => {\n    setTags(values);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `bearer ${state.token}`,\n        },\n      };\n\n      const tagList = tags.map((tag) => tag.value);\n      const newPost = {\n        ...data,\n        tags: tagList,\n      };\n\n      await axios.post(\"/api/posts\", newPost, config);\n\n      setMessages([{ text: \"Post submitted\", type: \"success\" }]);\n\n      e.target.reset();\n    } catch (err) {\n      const errorArray = err.response.data.errors.map((err) => {\n        return { text: err.msg, type: \"danger\" };\n      });\n      setMessages(errorArray);\n    }\n    setTimeout(() => setMessages([]), 5000);\n  };\n\n  return (\n    <div>\n      {messages &&\n        messages.map((msg) => <Message type={msg.type}>{msg.text}</Message>)}\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"title\">\n          Title:\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            onChange={(e) => handleChange(e)}\n            value={data.title}\n          />\n        </label>\n        New post:\n        <label htmlFor=\"text\">\n          <textarea\n            type=\"text\"\n            name=\"text\"\n            id=\"text\"\n            onChange={(e) => handleChange(e)}\n            value={data.text}\n          />\n        </label>\n        Tags:\n        <label htmlFor=\"tags\">\n          <CreatableSelect\n            isMulti\n            onChange={handleTags}\n            openMenuOnClick={false}\n            formatCreateLabel={(tag) => `Add '${tag}'`}\n          />\n        </label>\n        <Button>Submit new post</Button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewPost;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <Loader\n      style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, 0)\",\n        zIndex: 1,\n      }}\n      type=\"Oval\"\n    />\n  );\n};\n\nexport default Spinner;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../App\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Button, Message } from \"./Utils\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"./Loader\";\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const { state } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const res = await axios.get(\"/api/posts\");\n\n        const postList = res.data;\n\n        setPosts(postList);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  const deletePost = async (postID) => {\n    try {\n      const newList = posts.filter((post) => post._id !== postID);\n\n      const config = {\n        headers: {\n          Authorization: `bearer ${state.token}`,\n        },\n      };\n\n      await axios.delete(`api/posts/${postID}`, config);\n\n      setMessages([{ type: \"warning\", text: \"Post deleted.\" }]);\n      setPosts(newList);\n    } catch (err) {\n      console.error(err);\n      const errorArray = err.response.data.errors.map((err) => {\n        return { text: err.msg, type: \"danger\" };\n      });\n      setMessages(errorArray);\n    }\n    setTimeout(() => setMessages(null), 5000);\n  };\n\n  return (\n    <div>\n      {messages &&\n        messages.map((msg, i) => (\n          <Message key={i} variant={msg.type}>\n            {msg.text}\n          </Message>\n        ))}\n      <table>\n        <tbody>\n          <tr style={{ textAlign: \"left\" }}>\n            <th>Date</th>\n            <th>Title</th>\n            <th>Options</th>\n          </tr>\n          {posts.length ? (\n            posts.map((post) => (\n              <tr key={post._id}>\n                <td>{moment(post.date).format(\"Do, MMM, YYYY\")}</td>\n                <td>{post.title}</td>\n                <td>\n                  <Button variant=\"danger\" onClick={() => deletePost(post._id)}>\n                    Delete\n                  </Button>\n                  <Link to={`/posts/${post._id}`}>Edit</Link>\n                </td>\n              </tr>\n            ))\n          ) : (\n            <Spinner />\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PostList;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { AuthContext } from \"../App\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Message, Button } from \"./Utils\";\n\nconst EditPost = () => {\n  const { id } = useParams();\n  const { state } = useContext(AuthContext);\n  const [post, setPost] = useState();\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const res = await axios.get(`/api/posts/${id}`);\n        const { title, text } = res.data;\n        setPost({\n          title,\n          text,\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchPost();\n  }, [id]);\n\n  const handleChange = (e) => {\n    setPost({\n      ...post,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `bearer ${state.token}`,\n        },\n      };\n\n      await axios.put(`/api/posts/${id}`, post, config);\n\n      setMessages([{ text: \"Post updated\", type: \"success\" }]);\n    } catch (err) {\n      const errorArray = err.response.data.errors.map((err) => {\n        return { text: err.msg, type: \"danger\" };\n      });\n      setMessages(errorArray);\n    }\n    setTimeout(() => setMessages([]), 5000);\n  };\n\n  return (\n    <div>\n      {messages &&\n        messages.map((msg) => <Message variant={msg.type}>{msg.text}</Message>)}\n      {post && (\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"title\">\n            Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              onChange={(e) => handleChange(e)}\n              value={post.title}\n            />\n          </label>\n          New post:\n          <label htmlFor=\"text\">\n            <textarea\n              type=\"text\"\n              name=\"text\"\n              id=\"text\"\n              onChange={(e) => handleChange(e)}\n              value={post.text}\n            />\n          </label>\n          <Button>Submit changes</Button>\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default EditPost;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"../App\";\nimport { Button } from \"./Utils\";\n\nconst Nav = () => {\n  const { dispatch } = useContext(AuthContext);\n  const logOut = () => {\n    dispatch({ type: \"logout\" });\n  };\n\n  return (\n    <nav style={{ display: \"flex\", alignItems: \"center\" }}>\n      <ul\n        style={{\n          listStyle: \"none\",\n          display: \"flex\",\n          gap: \"14px\",\n          alignItems: \"center\",\n        }}\n      >\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/newpost\">New Post</Link>\n        </li>\n        <li>\n          <Button variant=\"warning\" onClick={logOut}>\n            Log out\n          </Button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AuthContext } from \"../App\";\nimport Login from \"./Login\";\nimport NewPost from \"./NewPost\";\nimport PostList from \"./PostList\";\nimport EditPost from \"./EditPost\";\nimport Nav from \"./Nav\";\n\nconst Home = () => {\n  const { state } = useContext(AuthContext);\n  return (\n    <Router>\n      {state.isAuthenticated && <Nav />}\n      <Switch>\n        <Route\n          exact\n          path=\"/newpost\"\n          component={state.isAuthenticated ? NewPost : Login}\n        ></Route>\n        <Route\n          exact\n          path=\"/posts/:id\"\n          component={state.isAuthenticated ? EditPost : Login}\n        ></Route>\n        <Route\n          exact\n          path=\"/\"\n          component={state.isAuthenticated ? PostList : Login}\n        ></Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Home;\n","import React, { createContext, useEffect, useReducer } from \"react\";\nimport authReducer from \"./authReducer\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\n\nconst AuthContext = createContext();\n\nconst App = () => {\n  const initialState = {\n    isAuthenticated: false,\n    token: null,\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n\n    token &&\n      dispatch({\n        type: \"login\",\n        payload: {\n          token: token,\n        },\n      });\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ state, dispatch }}>\n      <div>{state.isAuthenticated ? <Home /> : <Login />}</div>\n    </AuthContext.Provider>\n  );\n};\n\nexport { App, AuthContext };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}